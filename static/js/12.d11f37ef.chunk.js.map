{"version":3,"sources":["components/DarkModeSwitcher/DarkModeSwitcher.js","components/DarkModeSwitcher/index.js","components/Navbar/Logo.js","components/Navbar/LangSelector.js","components/Navbar/Menu.js","components/Navbar/MobileMenu.js","components/Navbar/HamburgerIcon.js","components/Navbar/ahmedbelaid.png","components/Navbar/Navbar.js","components/Navbar/index.js"],"names":["DarkModeSwitcher","_ref","onClose","_useContext","useContext","ThemeContext","isDarkMode","setIsDarkMode","t","useTranslation","_jsx","FormControlLabel","control","Switch","checked","name","color","onChange","label","makeStyles","theme","root","cursor","languages","code","country_code","useStyles","profileMenu","backgroundColor","palette","primary","main","marginTop","boxShadow","shadows","menuItem","backgroundSecondary","flagIcon","marginRight","spacing","LangSelector","props","classes","_useState","useState","_useState2","_slicedToArray","anchorEl","setAnchorEl","handleClose","i18n","changeLanguage","currentLanguage","find","elem","_jsxs","_objectSpread","children","Button","variant","onClick","e","currentTarget","_Fragment","className","concat","KeyboardArrowDownSharp","style","Menu","id","open","Boolean","keepMounted","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","disableScrollLock","MenuItem","smoothScrollProps","spy","smooth","offset","duration","AnimatedLink","React","forwardRef","ref","motion","div","custom","animate","Link","wrapper","display","alignItems","tabs","navMenuItem","StyledTab","withStyles","transition","minWidth","text","Tab","disableRipple","StyledTabs","indicator","maxWidth","Tabs","TabIndicatorProps","homeIsActive","value","setValue","_useState3","_useState4","isScrolling","setIsScrolling","isLoading","LoaderContext","controls","useAnimation","useEffect","Events","scrollEvent","register","to","element","start","opacity","y","i","delay","spyHandleChange","index","indicatorColor","textColor","event","newValue","component","onSetActive","onSetInactive","MuiLink","href","underline","marginLeft","drawer","background","default","list","width","fullList","listItem","justifyContent","padding","btnContainer","active","MobileMenu","onOpen","listItemProps","button","onKeyDown","activeClass","Drawer","anchor","paper","role","List","ListItem","Divider","container","overflow","flexDirection","line","height","secondary","line1","marginBottom","line2","line3","HamburgerIcon","isOpen","rest","_objectWithoutProperties","_excluded","variants","initial","rotate","x","navbar","toolbar","isMobile","Navbar","useMediaQuery","loaderContext","useTheme","scroll","setScroll","_useState5","_useState6","mobileNavIsOpen","setMobileNavIsOpen","window","addEventListener","scrollY","appbarVariants","scrolled","navbarHeight","type","stiffness","damping","AppBar","position","Toolbar","src","ahmedbelaid","alt","Hidden","smDown","mdUp"],"mappings":"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","file":"static/js/12.d11f37ef.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\nimport ThemeContext from \"../../contexts/themeContext\";\nimport { useTranslation } from \"react-i18next\";\n\nconst DarkModeSwitcher = ({ onClose }) => {\n    const { isDarkMode, setIsDarkMode } = useContext(ThemeContext);\n    const { t } = useTranslation()\n    return (\n        <FormControlLabel\n            control={\n                <Switch\n                    checked={isDarkMode}\n                    name=\"checkedDarkMode\"\n                    color=\"#2626262\"\n                    onChange={() => {\n                        if (onClose) {\n                            onClose();\n                        }\n                        setIsDarkMode(!isDarkMode);\n                    }}\n                />\n            }\n            label={t('dark_mode')}\n        />\n    );\n};\n\nexport default DarkModeSwitcher;\n","import DarkModeSwitcher from \"./DarkModeSwitcher\";\n\nexport default DarkModeSwitcher","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\nimport Ahmed from \"../../assets/images/ahmedbelaid\";\n\nconst Logo = ({ setHomeIsActive, ...rest }) => {\n    const classes = useStyles();\n    return (\n        <Link\n            spy\n            smooth\n            duration={500}\n            offset={-70}\n            href=\"/\"\n            onSetActive={() => setHomeIsActive(true)}\n            onSetInactive={() => setHomeIsActive(false)}\n            className={classes.root}\n        >\n            <img {...rest} />\n        </Link>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        cursor: \"pointer\",\n    },\n}));\n\nexport default Logo;\n","import React, { useState } from \"react\";\nimport { makeStyles, Menu, MenuItem, Button } from \"@material-ui/core\";\nimport { KeyboardArrowDownSharp } from \"@material-ui/icons\";\nimport i18n from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\nimport \"flag-icon-css/css/flag-icon.min.css\";\n\nconst languages = [\n    {\n        code: \"fr\",\n        name: \"FR\",\n        country_code: \"fr\",\n    },\n    {\n        code: \"en\",\n        name: \"EN\",\n        country_code: \"gb\",\n    },\n];\n\nconst LangSelector = (props) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const handleClose = (code) => {\n        i18n.changeLanguage(code);\n        setAnchorEl(null);\n        if (props.onClose) {\n            props.onClose();\n        }\n    };\n\n    const currentLanguage = languages.find((elem) => elem.code === t(\"language\"));\n\n    return (\n        <div {...props}>\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => setAnchorEl(e.currentTarget)}>\n                {currentLanguage && (\n                    <>\n                        <span className={`flag-icon flag-icon-${currentLanguage.country_code} ${classes.flagIcon}`} />\n                        {currentLanguage.name}\n                    </>\n                )}\n                <KeyboardArrowDownSharp style={{ color: \"white\" }} />\n            </Button>\n            <Menu\n                id=\"profile-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={() => setAnchorEl(null)}\n                keepMounted\n                elevation={0}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"center\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\",\n                }}\n                className={classes.profileMenu}\n                disableScrollLock\n            >\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"en\")}>\n                    <span className={`flag-icon flag-icon-gb ${classes.flagIcon}`} />\n                    EN\n                </MenuItem>\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"fr\")}>\n                    <span className={`flag-icon flag-icon-fr ${classes.flagIcon}`} />\n                    FR\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    profileMenu: {\n        \"& .MuiPaper-root\": {\n            backgroundColor: theme.palette.primary.main,\n            marginTop: \"2px\",\n            boxShadow: theme.shadows[4],\n        },\n    },\n    menuItem: {\n        \"&:hover\": {\n            backgroundColor: theme.backgroundSecondary,\n        },\n    },\n    flagIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport default LangSelector;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Tab, Tabs, Button, makeStyles, withStyles, Link as MuiLink } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { Link, Events } from \"react-scroll\";\nimport LangSelector from \"./LangSelector\";\nimport LoaderContext from \"../../contexts/loaderContext\";\nimport { useTranslation } from \"react-i18next\";\n\nconst smoothScrollProps = {\n    spy: true,\n    smooth: true,\n    offset: -70,\n    duration: 500,\n};\n\nconst AnimatedLink = React.forwardRef((props, ref) => (\n    <motion.div ref={ref} custom={props.custom} animate={props.animate}>\n        <Link {...smoothScrollProps} {...props} />\n    </motion.div>\n));\n\nconst Menu = ({homeIsActive}) => {\n    const classes = useStyles();\n    const [value, setValue] = useState(false);\n    const [isScrolling, setIsScrolling] = useState(false);\n    const { isLoading } = useContext(LoaderContext);\n    const controls = useAnimation();\n    const { t } = useTranslation()\n\n    useEffect(() => {\n        Events.scrollEvent.register(\"begin\", (to, element) => {\n            setIsScrolling(true);\n        });\n\n        Events.scrollEvent.register(\"end\", (to, element) => {\n            setIsScrolling(false);\n        });\n    });\n\n    useEffect(() => {\n        if (!isLoading) {\n            controls.start((i) => ({\n                y: 0,\n                opacity: 1,\n                transition: { delay: i * 0.1 + 0.3 },\n            }));\n        } else {\n            controls.start({ opacity: 0, y: -5 });\n        }\n    }, [isLoading, controls]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const spyHandleChange = (index) => {\n        if (!isScrolling) {\n            setValue(index);\n        }\n    };\n\n    useEffect(() => {\n        if (homeIsActive){\n            setValue(false)\n        }\n    }, [homeIsActive])\n\n    return (\n        <div className={classes.wrapper}>\n            <StyledTabs\n                className={classes.tabs}\n                value={value}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleChange}\n                aria-label=\"disabled tabs example\"\n            >\n                <StyledTab\n                    component={AnimatedLink}\n                    custom={0}\n                    animate={controls}\n                    to=\"about\"\n                    label={t('menu_about')}\n                    onSetActive={() => spyHandleChange(0)}\n                    onSetInactive={()=>spyHandleChange(false)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={1}\n                    to=\"experience\"\n                    label={t('menu_experience')}\n                    onSetActive={() => spyHandleChange(1)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={2}\n                    to=\"projects\"\n                    label={t('menu_projects')}\n                    onSetActive={() => spyHandleChange(2)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={3}\n                    to=\"contact\"\n                    label={t('menu_contact')}\n                    onSetActive={() => spyHandleChange(3)}\n                />\n            </StyledTabs>\n            <motion.div custom={4} animate={controls}>\n                <Button\n                    component={MuiLink}\n                    href=\"https://drive.google.com/file/d/1cj_CnN9rjS1qYIWhVCfD-3T2ZftAyppG/view?usp=sharing\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    underline=\"none\"\n                >\n                    {t('menu_resume')}\n                </Button>\n            </motion.div>\n            <motion.div custom={5} animate={controls}>\n                <LangSelector style={{ marginLeft: \"32px\" }} />\n            </motion.div>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    tabs: {\n        marginRight: theme.spacing(4),\n    },\n    navMenuItem: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst StyledTab = withStyles((theme) => ({\n    root: {\n        transition: \".2s\",\n        minWidth: 120,\n        \"&:hover\": {\n            color: theme.palette.text.primary,\n        },\n    },\n}))((props) => <Tab disableRipple {...props} />);\n\nconst StyledTabs = withStyles({\n    indicator: {\n        \"& > span\": {\n            maxWidth: 20,\n        },\n    },\n})((props) => <Tabs {...props} variant=\"fullWidth\" TabIndicatorProps={{ children: <span /> }} />);\n\nexport default Menu;\n","import React from \"react\";\nimport { makeStyles, Drawer, List, Button, Divider, ListItem, Link as MuiLink } from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\nimport DarkModeSwitcher from \"../DarkModeSwitcher\";\nimport LangSelector from \"./LangSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst MobileMenu = ({ open, onClose, onOpen }) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const listItemProps = {\n        button: true,\n        component: Link,\n        onClick: onClose,\n        onKeyDown: onClose,\n        spy: true,\n        smooth: true,\n        offset: 0,\n        duration: 500,\n        className: classes.listItem,\n        activeClass: classes.active,\n    };\n\n    return (\n        <Drawer anchor=\"left\" open={open} onClose={onClose} classes={{ paper: classes.drawer }}>\n            <div className={classes.list} role=\"presentation\">\n                <List className={classes.fullList}>\n                    <ListItem {...listItemProps} to=\"about\">\n                        {t('menu_about')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"experience\">\n                        {t('menu_experience')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"projects\">\n                        {t('menu_projects')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"contact\">\n                        {t('menu_contact')}\n                    </ListItem>\n                    <ListItem className={classes.btnContainer}>\n                        <Button\n                            component={MuiLink}\n                            href=\"https://publuu.com/flip-book/59153/173725\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            underline=\"none\"\n                            >\n                            {t('menu_resume')}\n                        </Button>\n                    </ListItem>\n                    <ListItem className={classes.btnContainer}>\n                        <LangSelector onClose={onClose} />\n                    </ListItem>\n                    <ListItem className={classes.btnContainer}>\n                        <DarkModeSwitcher onClose={onClose} />\n                    </ListItem>\n                    <Divider />\n                </List>\n            </div>\n        </Drawer>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        backgroundColor: theme.palette.background.default,\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: \"auto\",\n        marginTop: theme.spacing(4),\n    },\n    listItem: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: theme.spacing(2, 0),\n        \"&:hover\": {\n            backgroundColor: \"rgb(80,80,80)\",\n        },\n    },\n    btnContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: theme.spacing(1),\n    },\n    active: {\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nexport default MobileMenu;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\n\nconst HamburgerIcon = ({isOpen,...rest}) => {\n    const controls = useAnimation()\n    const classes = useStyles();\n    useEffect(() => {\n        if (isOpen) {\n            controls.start(\"animate\")\n        } else {\n            controls.start(\"initial\")\n        }\n    }, [isOpen,controls]);\n    return (\n        <motion.div className={classes.container} {...rest}>\n            <motion.div className={`${classes.line} ${classes.line1}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:45,y:9}}} animate={controls}></motion.div>\n            <motion.div className={`${classes.line} ${classes.line2}`} variants={{initial:{x:0,opacity:1}, animate:{x:250,opacity:0}}} animate={controls}></motion.div>\n            <motion.div className={`${classes.line} ${classes.line3}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:-45,y:-9}}} animate={controls}></motion.div>\n        </motion.div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        overflow:'hidden',\n        display:\"flex\",\n        flexDirection:\"column\",\n        alignItems:\"flex-end\",\n        cursor:\"pointer\",\n        padding:\"2px\"\n    },\n    line: {\n        height: \"3px\",\n        backgroundColor: theme.palette.text.secondary,\n    },\n    line1: {\n        width: \"35px\",\n        marginBottom: \"7px\",\n    },\n    line2: {\n        width: \"25px\",\n        marginBottom: \"7px\",\n    },\n    line3: {\n        width: \"35px\",\n    },\n}));\n\nexport default HamburgerIcon;\n","export default __webpack_public_path__ + \"static/media/ahmedbelaid.80be955b.png\";","import React, { useContext, useState, useEffect } from \"react\";\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport Logo from \"./Logo\";\nimport Menu from \"./Menu\";\nimport MobileMenu from \"./MobileMenu\";\nimport HamburgerIcon from \"./HamburgerIcon\";\nimport loaderContext from \"../../contexts/loaderContext\";\nimport ahmedbelaid from \"./ahmedbelaid.png\"\n\nconst Navbar = () => {\n    const [homeIsActive, setHomeIsActive]=useState(true)\n    const isMobile = useMediaQuery(\"(max-width:700px)\");\n    const { isLoading } = useContext(loaderContext);\n    const controls = useAnimation();\n    const theme = useTheme();\n    const [scroll, setScroll] = useState(false);\n    const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\n    const classes = useStyles({ scroll, isMobile });\n    const handleNav = () => setScroll(window.scrollY > 30);\n    window.addEventListener(\"scroll\", handleNav);\n\n    const appbarVariants = {\n        initial: { height: isMobile ? 70 : 100, boxShadow: theme.shadows[0] },\n        scrolled: { height: theme.navbarHeight, boxShadow: theme.shadows[10] },\n    };\n\n    useEffect(() => {\n        if (!isLoading) {\n            controls.start({\n                y: 0,\n                transition: {\n                    delay: 0.05,\n                    type: \"spring\",\n                    stiffness: 260,\n                    damping: 20,\n                },\n            });\n        } else {\n            controls.start({ y: -100 });\n        }\n    }, [isLoading, controls]);\n\n    return (\n        <motion.div\n            animate={controls}\n        >\n            <AppBar position=\"fixed\" elevation={0} className={classes.navbar} component=\"nav\">\n                <Toolbar\n                    className={classes.toolbar}\n                    component={motion.div}\n                    variants={appbarVariants}\n                    animate={scroll ? \"scrolled\" : \"initial\"}\n                    transition={{\n                        type: \"spring\",\n                        stiffness: 260,\n                        damping: 20,\n                    }}\n                >\n                    <img src={ahmedbelaid} alt=\"Logo\" href=\"/home\" width=\"130rem\"/>\n                    <Hidden smDown>\n                        <Menu homeIsActive={homeIsActive} />\n                    </Hidden>\n                    <Hidden mdUp>\n                        <HamburgerIcon isOpen={mobileNavIsOpen} onClick={() => setMobileNavIsOpen(!mobileNavIsOpen)} />\n                    </Hidden>\n                </Toolbar>\n            </AppBar>\n            <Hidden mdUp>\n                <MobileMenu\n                    open={mobileNavIsOpen}\n                    onClose={() => setMobileNavIsOpen(false)}\n                    onOpen={() => setMobileNavIsOpen(true)}\n                />\n            </Hidden>\n        </motion.div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n \n    navbar: {\n        backgroundColor: theme.palette.background.default,\n    },\n    toolbar: {\n        justifyContent: \"space-between\",\n        alignItems:\"center\",\n        padding: (props) => (props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)),\n    },\n}));\n\nexport default Navbar;\n","import Navbar from \"./Navbar\";\nexport default Navbar;\n"],"sourceRoot":""}